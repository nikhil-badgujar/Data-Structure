#include <iostream>
#include <conio.h>
using namespace std;


class node
{
public:	int value;
		node *next;

		//set user given value inside node
		node (int value)
		{
			this->value = value;
			this->next = nullptr;
		}

};

class SingleLinkedlist
{
	node *head;
	node *tail;
	node *current;
public:
	SingleLinkedlist():head(nullptr),tail(nullptr)
	{}

	//adding to the back
	void addToBack(int value)
	{
		//create new node
		node *newnode = new node(value);
		
		newnode->value = value;
		newnode->next = nullptr;

		//If this is the first node then head will be NULL
	    //2nd node onwards will go to next
		if (nullptr == head)
		{
			head = newnode;
		}
		else
		{
			tail->next = newnode;
		}
		tail = newnode;
	}
	
	//adding new element to front
	void addToFront(int value)
	{
		//create new node
		node *newnode = new node(value);
			newnode->value = value;
			newnode->next = nullptr;

			//If this is the first node then head will be NULL
	        //2nd node onwards will go to next
			if(nullptr == head)
			{
				tail = newnode;
			}
			else
			{
				newnode->next = head;
			}
			head = newnode;
	}

	//printing elements
	void printForward()
	{
		for (current = head; current; current = current->next)
			printf("%d\t",current->value);
	}

	//for removing elements
	int removeAll()
	{
		int cnt=0;
		node *temp;
		while(head)
		{
			temp = head;
			head = head->next;
			delete temp;
			cnt++;
		}
		tail = nullptr;
		return cnt;
	}
};

int main()
{
	int num;
	SingleLinkedlist s1;

	// Keep taing input from user
	while(cout<<"Enter Number (0 to stop) ",
			cin>>num,
			num)
	{
		s1.addToBack(num);
	}
	
	//adding to front 
	s1.addToFront(99);

	s1.printForward();
	cout<<endl<<"Total elements deleted: "<<s1.removeAll()<<endl;

	getch();
	return 0;
}